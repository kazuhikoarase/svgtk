{"version":3,"file":"math.mjs","sources":["../src/math.ts"],"sourcesContent":["//\n// math\n//\n// Copyright (c) 2025 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\nimport { extend } from './core';\n\nexport const d2r = (deg : number) => deg / 180 * Math.PI;\nexport const r2d = (rad : number) => rad / Math.PI * 180;\n\nconst inv = function(m : number[]) {\n  const det = m[0] * m[3] - m[1] * m[2];\n  return [m[3] / det, -m[1] / det, -m[2] / det, m[0] / det];\n};\n\nexport const getCrossPoint = function(a : number[], va : number[], b : number[], vb : number[]) {\n  const m = inv([va[0], -vb[0], va[1], -vb[1]]);\n  const v = [b[0] - a[0], b[1] - a[1]];\n  //const st = [m[0] * v[0] + m[1] * v[1], m[2] * v[0] + m[3] * v[1]];\n  //return [a[0] + va[0] * st[0], a[1] + va[1] * st[0]];\n  const s = m[0] * v[0] + m[1] * v[1];\n  return [a[0] + va[0] * s, a[1] + va[1] * s];\n};\n\ninterface QuadPointsOpts {\n  fn : (t : number) => number[];\n  min : number;\n  max : number;\n  n : number;\n  dt : number;\n}\n\nexport const getQuadPoints = function(opts : QuadPointsOpts) {\n\n  opts = extend({\n    fn : function(t : number) { return [t, t] },\n    min : 0, max : 1, n : 10, dt : 0.1\n  }, opts);\n\n  // delta points\n  const points = [];\n  !function() : any {\n    for (let i = 0; i <= opts.n; i += 1) {\n      const t = (opts.max - opts.min) * i / opts.n + opts.min;\n      points.push([opts.fn(t), opts.fn(t + opts.dt)]);\n    }\n  }();\n\n  const quadPoints = [];\n  !function() : any {\n    for (let i = 0; i < opts.n; i += 1) {\n      let z = getCrossPoint(\n        [points[i][0][0],\n         points[i][0][1]],\n        [points[i][1][0] - points[i][0][0],\n         points[i][1][1] - points[i][0][1]],\n        [points[i + 1][0][0],\n         points[i + 1][0][1]],\n        [points[i + 1][1][0] - points[i + 1][0][0],\n         points[i + 1][1][1] - points[i + 1][0][1]]\n      );\n      if (i == 0) {\n        quadPoints.push([points[i][0][0], points[i][0][1]]);\n        \n      }\n      if (isNaN(z[0]) ) {\n        z = points[i][0];\n      }\n      quadPoints.push([z[0], z[1], points[i + 1][0][0], points[i + 1][0][1]]);\n    }\n  }();\n  const qp : any = quadPoints;\n  qp.points = points;\n  return quadPoints;\n};\n\nexport default {\n  r2d,\n  d2r,\n  getCrossPoint,\n  getQuadPoints\n};\n"],"names":["d2r","deg","r2d","rad","inv","m","det","getCrossPoint","a","va","b","vb","v","getQuadPoints","opts","extend","t","points","i","quadPoints","z","qp","math"],"mappings":"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"}