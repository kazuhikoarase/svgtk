{"version":3,"file":"svgtk.mjs","sources":["../src/core.ts","../src/math.ts","../src/util.ts","../src/svgtk.ts"],"sourcesContent":["//\n// core\n//\n// Copyright (c) 2025 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\n/*\nexport const testoo = function<O, K extends keyof O>(o : O, k : K, v : any) => O;\n\nexport const testoo  = function(o : O, k : string, v : any) {\n  o[k] = v;\n  return o;\n};\n*/\n\n\nexport function testoo<O extends HTMLElement | SVGElement, K extends keyof O>(o : O, k : K, v : O[K]) : O;\nexport function testoo(o : any, k : string, v : any) {\n  o[k] = v;\n  return o;\n};\n\n\ntype EventListener = (event : {type : string}, detail? : any) => void;\n\ntype ElementParams = {[k : string] : any};\n\ntype ELType = HTMLElement | SVGElement;\n\ntype DOMWrapper = {\n  $el : ELType;\n  on(type : string, l : EventListener) : DOMWrapper;\n  off(type : string, l : EventListener) : DOMWrapper;\n  attrs(params : ElementParams) : DOMWrapper;\n  props(params : ElementParams) : DOMWrapper;\n  style(params : ElementParams) : DOMWrapper;\n  append($elm : DOMWrapper) : DOMWrapper;\n  remove($elm : DOMWrapper) : DOMWrapper;\n};\n/*\nexport const extend = function(o : any, a : any) {\n  for (let k in a) {\n    o[k] = a[k];\n  }\n  return o;\n};\n*/\nexport function extend<S, T, U extends S & T>(o : S, a : T) : U;\nexport function extend(o : any, a : any) : any {\n  for (let k in a) {\n    o[k] = a[k];\n  }\n  return o;\n};\n\nexport const eventTarget = function() {\n  let listenersMap : { [type : string] : EventListener[]} | null  = null;\n  return {\n    trigger: function(type : string, detail : any) {\n      if (!listenersMap) return;\n      const listeners = listenersMap[type];\n      if (!listeners) return;\n      const event = { type : type };\n      listeners.forEach(function(l) {\n        l(event, detail);\n      });\n    },\n    on: function(type : string, l : EventListener) {\n      listenersMap = (listenersMap || (listenersMap = {}) );\n      (listenersMap[type] || (listenersMap[type] = []) ).push(l);\n    },\n    off: function(type : string, l : EventListener) {\n      if (!listenersMap) return;\n      const listeners = listenersMap[type];\n      if (!listeners) return;\n      listenersMap[type] = listeners.filter(function(_l) {\n        return _l != l;\n      });\n    }\n  };\n};\n\n\nexport const domWrapper = function() {\n\n  const svgTagNames : { [tagName : string] : boolean } = {};\n  'svg g path rect circle text'.split(/\\s+/g).forEach(function(tagName) {\n    svgTagNames[tagName] = true;\n  });\n\n  return function(elm : HTMLElement | SVGElement | string) : DOMWrapper {\n    if (typeof elm == 'string') {\n      //elm = elm.toLowerCase();\n      elm = svgTagNames[elm]?\n          document.createElementNS('http://www.w3.org/2000/svg', elm) :\n            document.createElement(elm);\n    }\n    return {\n      $el: elm,\n      on: function(type, l) {\n        this.$el.addEventListener(type, l);\n        return this;\n      },\n      off: function(type, l) {\n        this.$el.removeEventListener(type, l);\n        return this;\n      },\n      attrs: function(params) {\n        for (let k in params) {\n          this.$el.setAttribute(k, '' + params[k]);\n        }\n        return this\n      },\n      props: function(this : any, params) {\n        for (let k in params) {\n          this.$el[k] = params[k];\n        }\n        return this\n      },\n      style: function(this : any, params) {\n        for (let k in params) {\n          this.$el.style[k] = '' + params[k];\n        }\n        return this\n      },\n      append: function($elm) {\n        this.$el.appendChild($elm.$el);\n        return this;\n      },\n      remove: function($elm) {\n        this.$el.removeChild($elm.$el);\n        return this;\n      }\n    };\n  };\n}();\n","//\n// math\n//\n// Copyright (c) 2025 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\nimport { extend } from './core';\n\nexport function d2r(deg : number) { return deg / 180 * Math.PI }\nexport function r2d(rad : number) { return rad / Math.PI * 180 }\n\nfunction inv(m : number[]) {\n  const det = m[0] * m[3] - m[1] * m[2];\n  return [m[3] / det, -m[1] / det, -m[2] / det, m[0] / det];\n}\n\nexport function getCrossPoint(a : number[], va : number[], b : number[], vb : number[]) {\n  const m = inv([va[0], -vb[0], va[1], -vb[1]]);\n  const v = [b[0] - a[0], b[1] - a[1]];\n  //const st = [m[0] * v[0] + m[1] * v[1], m[2] * v[0] + m[3] * v[1]];\n  //return [a[0] + va[0] * st[0], a[1] + va[1] * st[0]];\n  const s = m[0] * v[0] + m[1] * v[1];\n  return [a[0] + va[0] * s, a[1] + va[1] * s];\n}\n\nexport type QuadPointsOpts = {\n  fn : (t : number) => number[];\n  min : number;\n  max : number;\n  n : number;\n  dt : number;\n}\n\nexport function getQuadPoints(opts : QuadPointsOpts) {\n\n  opts = extend({\n    fn : function(t : number) { return [t, t] },\n    min : 0, max : 1, n : 10, dt : 0.1\n  }, opts);\n\n  // delta points\n  const points = [];\n  !function() : any {\n    for (let i = 0; i <= opts.n; i += 1) {\n      const t = (opts.max - opts.min) * i / opts.n + opts.min;\n      points.push([opts.fn(t), opts.fn(t + opts.dt)]);\n    }\n  }();\n\n  const quadPoints = [];\n  !function() : any {\n    for (let i = 0; i < opts.n; i += 1) {\n      let z = getCrossPoint(\n        [points[i][0][0],\n         points[i][0][1]],\n        [points[i][1][0] - points[i][0][0],\n         points[i][1][1] - points[i][0][1]],\n        [points[i + 1][0][0],\n         points[i + 1][0][1]],\n        [points[i + 1][1][0] - points[i + 1][0][0],\n         points[i + 1][1][1] - points[i + 1][0][1]]\n      );\n      if (i == 0) {\n        quadPoints.push([points[i][0][0], points[i][0][1]]);\n        \n      }\n      if (isNaN(z[0]) ) {\n        z = points[i][0];\n      }\n      quadPoints.push([z[0], z[1], points[i + 1][0][0], points[i + 1][0][1]]);\n    }\n  }();\n  const qp : any = quadPoints;\n  qp.points = points;\n  return quadPoints;\n};\n","//\n// util\n//\n// Copyright (c) 2025 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\nimport * as math from './math';\n\nexport type PathBuilder = {\n  moveTo(x : number, y : number) : PathBuilder;\n  lineTo(x : number, y : number) : PathBuilder;\n  quadTo(cx : number, cy : number, x : number, y : number) : PathBuilder;\n  cubicTo(cx1 : number, cy1 : number, cx2 : number, cy2 : number, x : number, y : number) : PathBuilder;\n  close() : PathBuilder;\n  build() : string;\n}\n\nexport type TranBuilder = {\n  translate(x : number, y : number) : TranBuilder;\n  rotate(rad : number) : TranBuilder;\n  scale(x : number, y : number) : TranBuilder;\n  skewX(rad : number) : TranBuilder;\n  skewY(rad : number) : TranBuilder;\n  build() : string;\n}\n\nexport function pathBuilder() : PathBuilder {\n  let d = '';\n  return {\n    moveTo(x, y) { d += 'M' + x + ' ' + y; return this; },\n    lineTo(x, y) { d += 'L' + x + ' ' + y; return this; },\n    quadTo(cx, cy, x, y) {\n      d += 'Q' + cx + ' ' + cy +' ' + x + ' ' + y; return this; },\n    cubicTo(cx1, cy1, cx2, cy2, x, y) {\n      d += 'C' + cx1 + ' ' + cy1 +' ' + cx2 + ' ' + cy2 +' ' +\n        x + ' ' + y; return this; },\n    close() { d += 'Z'; return this; },\n    build() { return d; }\n  };\n};\n\nexport function tranBuilder() :TranBuilder {\n  let t = '';\n  return {\n    translate(x, y) {\n      t += 'translate(' + x + ' ' + y + ')'; return this; },\n    rotate(rad) { t += 'rotate(' + math.r2d(rad) + ')'; return this; },\n    scale(x, y) {\n      t += 'scale(' + x + ' ' + y + ')'; return this; },\n    skewX(rad) {\n      t += 'skewX(' + math.r2d(rad) + ')'; return this; },\n    skewY(rad) {\n      t += 'skewY(' + math.r2d(rad) + ')'; return this; },\n    build() { return t; }\n  };\n};\n","//\n// svgtk\n//\n// Copyright (c) 2025 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\nimport * as core from './core';\nimport * as math from './math';\nimport * as util from './util';\n\nexport default {\n  core,\n  math,\n  util,\n}\n"],"names":["testoo","o","k","v","extend","a","eventTarget","listenersMap","type","detail","listeners","event","l","_l","domWrapper","svgTagNames","tagName","elm","params","$elm","d2r","deg","r2d","rad","inv","m","det","getCrossPoint","va","b","vb","s","getQuadPoints","opts","t","points","i","quadPoints","z","qp","pathBuilder","d","x","y","cx","cy","cx1","cy1","cx2","cy2","tranBuilder","math.r2d","svgtk","core","math","util"],"mappings":"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"}