{"version":3,"file":"svgtk.mjs","sources":["../src/svgtk.ts"],"sourcesContent":["//\n// svgtk\n//\n// Copyright (c) 2023 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\nimport math from './math';\n\ntype ElementParams = {[k : string] : any};\n\ninterface DOMWrapper {\n  $el : HTMLElement | SVGElement | any;\n  on(type : string, l : EventListener) : DOMWrapper;\n  off(type : string, l : EventListener) : DOMWrapper;\n  attrs(params : ElementParams) : DOMWrapper;\n  props(params : ElementParams) : DOMWrapper;\n  style(params : ElementParams) : DOMWrapper;\n  append($elm : DOMWrapper) : DOMWrapper;\n  remove($elm : DOMWrapper) : DOMWrapper;\n};\n\ninterface PathBuilder {\n  moveTo(x : number, y : number) : PathBuilder;\n  lineTo(x : number, y : number) : PathBuilder;\n  quadTo(cx : number, cy : number, x : number, y : number) : PathBuilder;\n  cubicTo(cx1 : number, cy1 : number, cx2 : number, cy2 : number, x : number, y : number) : PathBuilder;\n  close() : PathBuilder;\n  build() : string;\n}\n\ninterface TranBuilder {\n  translate(x : number, y : number) : TranBuilder;\n  rotate(rad : number) : TranBuilder;\n  scale(x : number, y : number) : TranBuilder;\n  skewX(rad : number) : TranBuilder;\n  skewY(rad : number) : TranBuilder;\n  build() : string;\n}\n\nconst domWrapper = function() {\n\n  const svgTagNames : { [tagName : string] : boolean } = {};\n  'svg g path rect circle text'.split(/\\s+/g).forEach(function(tagName) {\n    svgTagNames[tagName] = true;\n  });\n\n  return function(elm : HTMLElement | SVGElement | string) : DOMWrapper {\n    if (typeof elm == 'string') {\n      //elm = elm.toLowerCase();\n      elm = svgTagNames[elm]?\n          document.createElementNS('http://www.w3.org/2000/svg', elm) :\n            document.createElement(elm);\n    }\n    return {\n      $el: elm,\n      on: function(type, l) {\n        this.$el.addEventListener(type, l);\n        return this;\n      },\n      off: function(type, l) {\n        this.$el.removeEventListener(type, l);\n        return this;\n      },\n      attrs: function(params) {\n        for (let k in params) {\n          this.$el.setAttribute(k, '' + params[k]);\n        }\n        return this\n      },\n      props: function(params) {\n        for (let k in params) {\n          this.$el[k] = params[k];\n        }\n        return this\n      },\n      style: function(params) {\n        for (let k in params) {\n          this.$el.style[k] = '' + params[k];\n        }\n        return this\n      },\n      append: function($elm) {\n        this.$el.appendChild($elm.$el);\n        return this;\n      },\n      remove: function($elm) {\n        this.$el.removeChild($elm.$el);\n        return this;\n      }\n    };\n  };\n}();\n\nconst pathBuilder : () => PathBuilder = function() {\n  let d = '';\n  return {\n    moveTo : function(x, y) { d += 'M' + x + ' ' + y; return this; },\n    lineTo : function(x, y) { d += 'L' + x + ' ' + y; return this; },\n    quadTo : function(cx, cy, x, y) {\n      d += 'Q' + cx + ' ' + cy +' ' + x + ' ' + y; return this; },\n    cubicTo : function(cx1, cy1, cx2, cy2, x, y) {\n      d += 'C' + cx1 + ' ' + cy1 +' ' + cx2 + ' ' + cy2 +' ' +\n        x + ' ' + y; return this; },\n    close : function() { d += 'Z'; return this; },\n    build : function() { return d; }\n  };\n};\n\nconst tranBuilder : () => TranBuilder = function() {\n  let t = '';\n  return {\n    translate : function(x, y) {\n      t += 'translate(' + x + ' ' + y + ')'; return this; },\n    rotate : function(rad) { t += 'rotate(' + math.r2d(rad) + ')'; return this; },\n    scale : function(x, y) {\n      t += 'scale(' + x + ' ' + y + ')'; return this; },\n    skewX : function(rad) {\n      t += 'skewX(' + math.r2d(rad) + ')'; return this; },\n    skewY : function(rad) {\n      t += 'skewY(' + math.r2d(rad) + ')'; return this; },\n    build : function() { return t; }\n  };\n};\n\nexport default {\n  domWrapper,\n  pathBuilder,\n  tranBuilder\n};\n"],"names":["domWrapper","svgTagNames","tagName","elm","type","l","params","k","$elm","pathBuilder","d","x","y","cx","cy","cx1","cy1","cx2","cy2","tranBuilder","t","rad","math","svgtk"],"mappings":"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"}