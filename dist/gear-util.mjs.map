{"version":3,"file":"gear-util.mjs","sources":["../src/gear-util.ts"],"sourcesContent":["//\n// gear-util\n//\n// Copyright (c) 2025 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n\nimport { extend } from './core';\nimport { pathBuilder as $pb } from './svgtk';\nimport { getQuadPoints } from './math';\nimport { mat4 } from './mat4';\n\n// t = sqrt(rr^2 / r^2 - 1)\nconst get_t = function(r : number, rr : number) {\n  return Math.sqrt( (rr * rr) / (r * r) - 1);\n};\n\nconst get_fn = function(r : number, t0 : number) {\n  return function(t : number) {\n    return [\n      r * Math.cos(t + t0) + r * t * Math.sin(t + t0),\n      r * Math.sin(t + t0) - r * t * Math.cos(t + t0)\n    ];\n  };\n};\n\nconst quadParams = { n : 3, dt : 0.05 };\n\nexport interface GearOpts {\n  m : number;\n  z : number;\n  a : number;\n}\n\nexport interface PieOpts {\n  r1 : number;\n  r2 : number;\n  r3 : number;\n  r4 : number;\n  w : number;\n  a : number;\n  offsetAngle : number;\n}\n\nexport const createGear = function(opts : GearOpts) {\n\n  opts = extend({ m : 20, z : 20, a : Math.PI * 20 / 180 }, opts);\n\n  const m = opts.m;\n  const z = opts.z;\n\n  const d = z * m;\n  const d1 = d - 2.5 * m;\n  const d2 = d + 2 * m;\n  const db = d * Math.cos(opts.a);\n\n  let r = db / 2;\n  r = Math.max(r, d1 / 2); // fix - r\n  const tMin = Math.PI * 2 * 0;\n  const tMax = get_t(r, d2 / 2);\n\n  const p = get_fn(r, 0)(get_t(r, d / 2) );\n  const t0 = -Math.atan(p[1] / p[0]);\n\n  const pb = $pb();\n\n  let i, qPts, tOffset = 0;\n\n  for (let m = 0; m < z; m += 1) {\n\n    qPts = getQuadPoints({ fn : get_fn(r, t0 + tOffset),\n      min : tMin, max : tMax, n : quadParams.n, dt : quadParams.dt });\n    for (i = 0; i < qPts.length; i += 1) {\n      if (i == 0) {\n        if (m == 0) {\n          pb.moveTo(qPts[i][0], qPts[i][1]);\n        }\n      } else {\n        pb.quadTo(qPts[i][0], qPts[i][1], qPts[i][2], qPts[i][3]);\n      }\n    }\n    tOffset += Math.PI / z;\n\n    qPts = getQuadPoints({ fn : get_fn(r, -t0 + tOffset),\n      min : -tMax, max : tMin, n : quadParams.n, dt : quadParams.dt });\n    for (i = 0; i < qPts.length; i += 1) {\n      if (i == 0) {\n        pb.lineTo(qPts[i][0], qPts[i][1]);\n      } else {\n        pb.quadTo(qPts[i][0], qPts[i][1], qPts[i][2], qPts[i][3]);\n      }\n    }\n    tOffset += Math.PI / z;\n\n    !function() : any {\n      let t1;\n      const r1 = d1 / 2;\n      const pts1 = [];\n      t1 = Math.PI / z * (m * 2 + 1) - t0;\n      pts1.push([r1 * Math.cos(t1), r1 * Math.sin(t1)]);\n      t1 = Math.PI / z * (m * 2 + 1.5);\n      pts1.push([r1 * Math.cos(t1), r1 * Math.sin(t1)]);\n      t1 = Math.PI / z * (m * 2 + 2) + t0;\n      pts1.push([r1 * Math.cos(t1), r1 * Math.sin(t1)]);\n      t1 = Math.PI / z * (m * 2 + 2) + t0;\n      pts1.push([r * Math.cos(t1), r * Math.sin(t1)]);\n      pb.quadTo(pts1[0][0], pts1[0][1], pts1[1][0], pts1[1][1]);\n      pb.quadTo(pts1[2][0], pts1[2][1], pts1[3][0], pts1[3][1]);\n    }();\n  }\n\n  pb.close();\n\n  return {\n    m : m, z : z, d : d, d1 : d1, d2 : d2, r : r,\n    tMin : tMin, tMax : tMax, t0 : t0,\n    path : pb.build()\n  };\n};\n\nexport const createInnerGear = function(opts : GearOpts) {\n\n  opts = extend({ m : 20, z : 20, a : Math.PI * 20 / 180 }, opts);\n\n  const m = opts.m;\n  const z = opts.z;\n\n  const d = z * m;\n  const d1 = d + 2.5 * m;\n  const d2 = d - 2 * m;\n  const db = d * Math.cos(opts.a);\n\n  let r = db / 2;\n  r = Math.max(r, d2 / 2); // fix - r\n  const tMin = Math.PI * 2 * 0;\n  const tMax = get_t(r, d1 / 2);\n\n  const p = get_fn(r, 0)(get_t(r, d / 2) );\n  const t0 = -Math.atan(p[1] / p[0]);\n\n  const pb = $pb();\n\n  let i, qPts, tOffset = 0;\n\n  for (let m = 0; m < z; m += 1) {\n\n    qPts = getQuadPoints({ fn : get_fn(r, -t0 + tOffset),\n      min : -tMax, max : tMin, n : quadParams.n, dt : quadParams.dt });\n    for (i = 0; i < qPts.length; i += 1) {\n      if (i == 0) {\n        if (m == 0) {\n          pb.moveTo(qPts[i][0], qPts[i][1]);\n        }\n      } else {\n        pb.quadTo(qPts[i][0], qPts[i][1], qPts[i][2], qPts[i][3]);\n      }\n    }\n    tOffset += Math.PI / z;\n\n    qPts = getQuadPoints({ fn : get_fn(r, t0 + tOffset),\n      min : tMin, max : tMax, n : quadParams.n, dt : quadParams.dt });\n    for (i = 0; i < qPts.length; i += 1) {\n      if (i == 0) {\n        pb.lineTo(qPts[i][0], qPts[i][1]);\n      } else {\n        pb.quadTo(qPts[i][0], qPts[i][1], qPts[i][2], qPts[i][3]);\n      }\n    }\n    tOffset += Math.PI / z;\n\n    !function() : any {\n      let t1;\n      const r1 = d1 / 2;\n      t1 = Math.PI / z * (m * 2 + 1.5) - t0;\n      pb.lineTo(r1 * Math.cos(t1), r1 * Math.sin(t1));\n    }();\n  }\n\n  pb.close();\n\n  return {\n    m : m, z : z, d : d, d1 : d1, d2 : d2, r : r,\n    tMin : tMin, tMax : tMax, t0 : t0,\n    path : pb.build()\n  };\n};\n\nexport const createPie = function(opts : PieOpts) {\n\n  opts = extend({\n    r1 : 100, r2 : 200, r3 : 10, r4 : 10,\n    w : 10, a : Math.PI / 2, offsetAngle : 0\n  }, opts);\n\n  const arcs : { order : number, cx : number, cy : number, r : number, t0 : number, t1 : number }[] = [];\n\n  !function() : any {\n    const a = Math.asin( (opts.w / 2 + opts.r3) / (opts.r1 + opts.r3) );\n    const x = opts.r1 * Math.cos(a);\n    const y = opts.r1 * Math.sin(a);\n    const t = Math.atan2(y, x);\n    arcs.push({ order : 0, cx : 0, cy : 0,\n      r : opts.r1, t0 : opts.a - t, t1 : t });\n  }();\n\n  !function() : any {\n    let dt;\n    !function(a) : any {\n      const x = opts.r1 * Math.cos(a);\n      const y = opts.r1 * Math.sin(a);\n      const cx = (opts.r1 + opts.r3) * Math.cos(a);\n      const cy = (opts.r1 + opts.r3) * Math.sin(a);\n      const t0 = Math.atan2(y - cy, x - cx);\n      const t1 = Math.atan2(opts.w / 2 - cy, 0);\n      arcs.push({ order : 1, cx : cx, cy : cy,\n        r : opts.r3, t0 : t0, t1 : t1 });\n      dt = t1 - t0;\n    }(Math.asin( (opts.w / 2 + opts.r3) / (opts.r1 + opts.r3) ) );\n    !function(a) : any {\n      const x = opts.r1 * Math.cos(a);\n      const y = opts.r1 * Math.sin(a);\n      const cx = (opts.r1 + opts.r3) * Math.cos(a);\n      const cy = (opts.r1 + opts.r3) * Math.sin(a);\n      const t0 = Math.atan2(y - cy, x - cx);\n      const t1 = t0 - dt;\n      arcs.push({ order : 5, cx : cx, cy : cy,\n        r : opts.r3, t0 : t1, t1 : t0 });\n    }(opts.a - Math.asin( (opts.w / 2 + opts.r3) / (opts.r1 + opts.r3) ) );\n  }();\n\n  !function() : any {\n    const a = Math.asin( (opts.w / 2 + opts.r4) / (opts.r2 - opts.r4) );\n    const x = opts.r2 * Math.cos(a);\n    const y = opts.r2 * Math.sin(a);\n    const t = Math.atan2(y, x);\n    arcs.push({ order : 3, cx : 0, cy : 0,\n      r : opts.r2, t0 : t, t1 : opts.a - t });\n  }();\n\n  !function() : any {\n    let dt;\n    !function(a) : any {\n      const x = opts.r2 * Math.cos(a);\n      const y = opts.r2 * Math.sin(a);\n      const cx = (opts.r2 - opts.r4) * Math.cos(a);\n      const cy = (opts.r2 - opts.r4) * Math.sin(a);\n      const t0 = Math.atan2(opts.w / 2 - cy, 0);\n      const t1 = Math.atan2(y - cy, x - cx);\n      arcs.push({ order : 2, cx : cx, cy : cy,\n        r : opts.r4, t0 : t0, t1 : t1 });\n      dt = t1 - t0;\n    }(Math.asin( (opts.w / 2 + opts.r4) / (opts.r2 - opts.r4) ) );\n    !function(a) : any {\n      const x = opts.r2 * Math.cos(a);\n      const y = opts.r2 * Math.sin(a);\n      const cx = (opts.r2 - opts.r4) * Math.cos(a);\n      const cy = (opts.r2 - opts.r4) * Math.sin(a);\n      const t1 = Math.atan2(y - cy, x - cx);\n      const t0 = t1 + dt;\n      arcs.push({ order : 4, cx : cx, cy : cy,\n        r : opts.r4, t0 : t1, t1 : t0 });\n    }(opts.a - Math.asin( (opts.w / 2 + opts.r4) / (opts.r2 - opts.r4) ) );\n  }();\n\n  arcs.sort(function(a1, a2) {\n    return a1.order < a2.order ? -1 : 1;\n  });\n\n  const mat = mat4().rotateZ(opts.offsetAngle);\n\n  const pb = $pb();\n  arcs.forEach(function(arc) {\n    const fn =function(t : number) {\n      return [\n        arc.r * Math.cos(t) + arc.cx,\n        arc.r * Math.sin(t) + arc.cy\n      ];\n    };\n    const d = getQuadPoints({ fn : fn,\n      min : arc.t0, max : arc.t1, n : 4, dt : 0.05 });\n    for (let i = 0; i < d.length; i += 1) {\n      d[i] = mat.transform([d[i][0], d[i][1]]).\n        concat(mat.transform([d[i][2], d[i][3]]) );\n      if (i == 0) {\n        if (arc.order == 0) {\n          pb.moveTo(d[i][0], d[i][1]);\n        } else if (arc.order == 2) {\n          pb.lineTo(d[i][0], d[i][1]);\n        } else if (arc.order == 5) {\n          pb.lineTo(d[i][0], d[i][1]);\n        }\n      } else {\n        pb.quadTo(d[i][0], d[i][1], d[i][2], d[i][3]);\n      }\n    }\n  });\n  pb.close();\n\n  return { path : pb.build() };\n};\n"],"names":["get_t","r","rr","get_fn","t0","t","quadParams","createGear","opts","extend","m","z","d","d1","d2","tMin","tMax","p","pb","$pb","i","qPts","tOffset","getQuadPoints","t1","r1","pts1","createInnerGear","createPie","arcs","a","x","y","dt","cx","cy","a1","a2","mat","mat4","arc"],"mappings":"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"}